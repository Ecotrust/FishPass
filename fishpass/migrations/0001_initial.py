# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-09-25 00:57
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Barrier',
            fields=[
                ('pad_id', models.IntegerField(help_text='The barrier ID as assigned in the PAD', primary_key=True, serialize=False, verbose_name='Barrier ID')),
                ('passage_id', models.IntegerField(verbose_name='Passage ID')),
                ('stream_name', models.CharField(help_text='The name of the waterbody obstructed by this barrier', max_length=255, verbose_name='Stream Name')),
                ('tributary_to', models.CharField(help_text='The waterbody that this obstructed waterbody flows into', max_length=255, verbose_name='Tributary To')),
                ('site_name', models.CharField(help_text='Name of the site at which barrier is located, or name of the barrier itself', max_length=255, verbose_name='Site Name')),
                ('protocol', models.CharField(help_text='How the barrier was identified', max_length=255, verbose_name='Protocol')),
                ('assessed_by', models.CharField(max_length=255, verbose_name='Assessed By')),
                ('huc8_code', models.IntegerField(blank=True, default=None, null=True, verbose_name='HUC 8 ID')),
                ('huc8_name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='HUC 8 Name')),
                ('huc10_code', models.IntegerField(blank=True, default=None, null=True, verbose_name='HUC 10 ID')),
                ('huc10_name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='HUC 10 Name')),
                ('huc12_code', models.IntegerField(blank=True, default=None, null=True, verbose_name='HUC 12 ID')),
                ('huc12_name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='HUC 12 Name')),
                ('county', models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='County')),
                ('nhd_com_id', models.IntegerField(blank=True, default=None, null=True)),
                ('nhd_com_meas', models.FloatField(blank=True, default=None, null=True)),
                ('longitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)], verbose_name='Longitude (x value)')),
                ('latitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)], verbose_name='Latitude (y value)')),
                ('state', models.CharField(default='CA', max_length=5)),
                ('updated', models.DateField(blank=True, default=None, null=True, verbose_name='Date Updated')),
                ('esu_coho', models.CharField(blank=True, default=None, help_text='Evolutionarily Significant Unit', max_length=255, null=True, verbose_name='Coho Salmon ESU')),
                ('esu_chinook', models.CharField(blank=True, default=None, help_text='Evolutionarily Significant Unit', max_length=255, null=True, verbose_name='Chinook Salmon ESU')),
                ('esu_steelhead', models.CharField(blank=True, default=None, help_text='Evolutionarily Significant Unit', max_length=255, null=True, verbose_name='Steelhead Salmon ESU')),
                ('upstream_miles', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Miles Upstream')),
                ('downstream_id', models.IntegerField(blank=True, default=None, null=True, verbose_name='Downstream Barrier ID')),
                ('downstream_barrier_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Downstream Barrier Count')),
            ],
        ),
        migrations.CreateModel(
            name='BarrierStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=90)),
                ('default_pre_passability', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Pre-passability')),
            ],
        ),
        migrations.CreateModel(
            name='BarrierType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('default_cost', models.FloatField(blank=True, null=True, verbose_name='Default Cost of Mitigation')),
                ('default_post_passability', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Post-passability')),
            ],
        ),
        migrations.CreateModel(
            name='FocusArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_type', models.CharField(blank=True, choices=[('HUC08', 'HUC08'), ('HUC10', 'HUC10'), ('HUC12', 'HUC12'), ('County', 'County'), ('Region', 'Region'), ('State', 'State')], default=None, max_length=20, null=True)),
                ('unit_id', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=3857, verbose_name='Focus Area Geometry')),
            ],
        ),
        migrations.CreateModel(
            name='OwnershipType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Date Modified')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('satisfied', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('planning_units', models.TextField(blank=True, null=True, verbose_name='Planning Unit IDs')),
                ('geometry_final_area', models.FloatField(blank=True, null=True, verbose_name='Total Area')),
                ('geometry_dissolved', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=3857, verbose_name='Scenario result dissolved')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fishpass_project_related', to='contenttypes.ContentType')),
                ('sharing_groups', models.ManyToManyField(blank=True, editable=False, related_name='fishpass_project_related', to='auth.Group', verbose_name='Share with the following groups')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fishpass_project_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='barrier',
            name='barrier_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fishpass.BarrierStatus', verbose_name='Barrier Status'),
        ),
        migrations.AddField(
            model_name='barrier',
            name='ownership_type',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='fishpass.OwnershipType', verbose_name='Ownership Type'),
        ),
        migrations.AddField(
            model_name='barrier',
            name='site_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fishpass.BarrierType', verbose_name='Barrier Type'),
        ),
    ]
